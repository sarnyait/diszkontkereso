<?php


/**
 * Implementation of hook_menu().
 *
 * @return An array of menu items.
 */
function matrix_menu() {
  $items = array();
  $items['matrix'] = array(
    'title' => '',
    'page callback' => 'matrix_compare_page',
    'access arguments' => array('access content'),
  );

  $items['matrix_cart'] = array(
    'title' => '',
    'page callback' => 'matrix_cart_page',
    'access arguments' => array('access content'),
  );

  $items['matrix_cart_ajax'] = array(
    'title' => '',
    'page callback' => 'matrix_cart_page_ajax',
    'access arguments' => array('access content'),
  );

  $items['matrix_inlist_counter_widget'] = array(
    'title' => '',
    'page callback' => 'matrix_inlist_counter_widget',
    'access arguments' => array('access content'),
  );

  $items['save-order'] = array(
    'page callback' => 'matrix_save_order',
    'access arguments' => array('access content'),
  );

  $items['fix-products'] = array(
    'title' => '',
    'page callback' => 'matrix_fix_products',
    'access arguments' => array('access content'),
  );

  $items['get-shop-name'] = array(
    'title' => '',
    'page callback' => 'matrix_get_shop_from_product',
    'access arguments' => array('access content'),
  );
  return $items;
}

function matrix_block_info() {
  $blocks['matrix'] = array(
    'info' => t('Matrix - product compare page and cart system'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

function matrix_block_view($delta = '') {
  drupal_add_js(drupal_get_path('module', 'matrix') . '/js/matrix_compare_page.js');
  $block = array();

  switch ($delta) {
    case 'matrix':
      $block['subject'] = t('Shopping list');
      $block['content'] = matrix_cart_page(TRUE);
      break;
  }
  return $block;
}

/*function matrix_preprocess_page(&$variables) {

  drupal_add_css(drupal_get_path('module', 'matrix') . '/css/matrix_compare_page.css');
  drupal_add_js(drupal_get_path('module', 'matrix') . '/js/matrix_compare_page.js');
  drupal_add_js(drupal_get_path('module', 'matrix') . '/js/remodal/remodal.js');
  drupal_add_css(drupal_get_path('module', 'matrix') . '/js/remodal/remodal.css');
  drupal_add_css(drupal_get_path('module', 'matrix') . '/js/remodal/remodal-default-theme.css');

}*/

function matrix_theme($existing, $type, $theme, $path) {
  $path = drupal_get_path('module', 'matrix') . '/templates';

  $theme = array();
  $theme['matrix_compare_page'] = array(
    'variables' => array('vars' => NULL),
    'template' => 'matrix_compare_page',
    'path' => $path,
  );

  $theme['matrix_cart'] = array(
    'variables' => array('vars' => NULL),
    'template' => 'matrix_cart',
    'path' => $path,
  );

  $theme['matrix_cart_print'] = array(
    'variables' => array('vars' => NULL),
    'template' => 'matrix_cart_print',
    'path' => $path,
  );

  $theme['matrix_cart_block'] = array(
    'variables' => array('vars' => NULL),
    'template' => 'matrix_cart_block',
    'path' => $path,
  );

  $theme['matrix_plus_minus'] = array(
    'variables' => array('vars' => NULL),
    'template' => 'matrix_plus_minus',
    'path' => $path,
  );

  return $theme;
}

function matrix_add_tr(&$row) {
   $row = $row . '<div style="clear: both;"></div>';
}

function matrix_add_plus_minus($class = 'input', $left) {
  $output = '';
  $output .= '';
  $output .= '<div class="plus-minus" data-category="' . $left . '">';
  $output .= '<input type="button" value="-" class="matrix_val_change" data-source="' . $class . '_val" data-category="' . $left . '">';
  $output .= '<input type="number" pattern="[0-9]*" id="' . $class . '_val" class="matrix_val" data-category="' . $left . '" value="1">';
  //$output .= '<input type="number" id="' . $class . '_val" class="matrix_val_weight" data-category="' . $left . '" value="' . $weight . '">';
  $output .= '<input type="button" value="+" class="matrix_val_change" data-source="' . $class . '_val">';
  //$output .= '<div class="measure-selector measure-pc"><input class="default-measure" type="radio" value="pc" name="measure_' . $left . '">' . t('pieces') . '</div>';
  //$output .= '<div class="measure-selector measure-weight"><input type="radio" value="kg" name="measure_' . $left . '">' . t('weight') . '</div>';
  $output .= '</div>';
  return $output;
}

function matrix_add_bottom_button($class = 'input') {
  $output = '';
  $output .= '<input type="button" value="' . t('Add to my list') . '" class="' . $class . '_cart matrix_cart_button" data-name="' . $class . '">';
  return $output;
}

function matrix_tax2flat_array($terms) {
  $newterms = array();
  foreach ($terms as $term) {

    $newterms[] = (is_array($term)) ? $term['tid'] : $term->tid;
  }
  return $newterms;
}

function matrix_find_product($category, $shop) {
  $query = db_select('node', 'n');
  $query->leftJoin('field_data_field_aruhaz', 'a', 'n.nid = a.entity_id');
  $query->leftJoin('field_data_field_kategoria', 'k', 'n.nid = k.entity_id');
  $query->leftJoin('field_data_field_ajanlott_a_heten_', 'aj', 'n.nid = aj.entity_id');
  $query->fields('n', array('type', 'title', 'nid'))
    ->fields('a', array('field_aruhaz_tid', 'entity_id'))
    ->fields('aj', array('field_ajanlott_a_heten__value', 'entity_id'))
    ->condition('n.type', 'products_display')
    ->condition('a.field_aruhaz_tid', $shop)
    ->condition('aj.field_ajanlott_a_heten__value', 1)
    ->condition('k.field_kategoria_tid', $category);
  $result = $query->execute();
  $rowitem = FALSE;
  foreach ($result as $row) {
    $rowitem = $row->nid;
  }
  return $rowitem;

}

function matrix_render_product_view($pid) {
  $output = views_embed_view('matrix_display', 'block_1', $pid);
  return $output;
}

function matrix_get_termname($tid) {
  $term = taxonomy_term_load($tid);
  //$term = entity_metadata_wrapper('taxonomy_term', $term);
  if ($term->vocabulary_machine_name == 'elelmiszerek') {
    if (count($term->field_hosszunev) > 0) {
      $termname = $term->field_hosszunev[LANGUAGE_NONE][0]['value'];
    }
    else {
      $termname = $term->name;
    };

  }
  else {
    $termname = $term->name;

  }
  return $termname;
}

function matrix_get_shop_url($tid) {
  $shop = taxonomy_term_load($tid);
  $shopWrapper = entity_metadata_wrapper('taxonomy_term', $shop);
  //$url = $shop->field_url[LANGUAGE_NONE][0]['value'];
  $url = $shopWrapper->field_url->value();
  return '<input type="button" value="Bolt webhelye" onClick="window.open(\'' . $url . '\');">';
}

function matrix_compare_page() {
  drupal_add_library('system', 'jquery.cookie');
  drupal_add_css(drupal_get_path('module', 'matrix') . '/css/matrix_compare_page.css');
  drupal_add_js(drupal_get_path('module', 'matrix') . '/js/matrix_compare_page.js');
  drupal_add_js(drupal_get_path('module', 'matrix') . '/js/remodal/remodal.js');
  drupal_add_css(drupal_get_path('module', 'matrix') . '/js/remodal/remodal.css');
  drupal_add_css(drupal_get_path('module', 'matrix') . '/js/remodal/remodal-default-theme.css');
  $colors = array('red', 'green', 'blue', 'purple', 'yellow');

  $nodes = node_load_multiple(array(), array('type' => 'heti_ajanlat'));
  $nodes = reset($nodes);
  $terms = $nodes->field_kategoria[LANGUAGE_NONE];
  $lefts = matrix_tax2flat_array($terms);
  //$lefts = array('Sajt', 'Hus', 'Sor', 'aaa', 'bbb');


  $vocabulary = taxonomy_vocabulary_machine_name_load('aruhaz');
  $terms2 = entity_load('taxonomy_term', FALSE, array('vid' => $vocabulary->vid));
  $terms2 = $nodes->field_shop[LANGUAGE_NONE];
  //$terms2 = taxonomy_term_load_multiple(array(519, 520, 2052, 2049));
  $tops = matrix_tax2flat_array($terms2);
  //$tops = array('Spar', 'Tesco', 'Lidl', 'CBA');

  $sumPrice = array();
  $sumWeight = array();
  foreach ($lefts as $left) {
    foreach ($tops as $top) {
      $pid = matrix_find_product($left, $top);
      if (isset($pid) && $pid !== FALSE) {
        $product = node_load($pid);
        if (isset($sumPrice[$top])) {
          $sumPrice[$top] += $product->field_akciosar[LANGUAGE_NONE][0]['value'];
        }
        else {
          $sumPrice[$top] = $product->field_akciosar[LANGUAGE_NONE][0]['value'];
        }
      }
      else {
        //$sumPrice[$top] = 0;
      }

    }
  }
  asort($sumPrice);
  foreach ($sumPrice as $key => $value) {
    $toplist[] = $key;
  }
  $terms2 = taxonomy_term_load_multiple($toplist);
  $tops = matrix_tax2flat_array($terms2);




  drupal_set_title(t('Weekly best cart offer with products on sale'));
  $header = '<div id="matrix-header"><div class="cell" id="corner"><div class="checkbox"></div><div class="pieces">' . t('Pieces') . '</div><div class="category">' . t('Category') . '</div></div>';
  $header .= '';
  $c = 0;
  foreach ($tops as $top) {
    $header .= '<div class="cell ' . $top . '" data-name="' . $top . '">' .  matrix_get_termname($top) . '</div>';
    $c++;
  }
  $header .= '</div>';
  matrix_add_tr($header);

  $sumPrice = array();
  $table = '<div id="tableBody">';
  $weight = 0;


  $sumPrice = array();
  foreach ($lefts as $left) {
    $table .= '<div class="table-row">';
    $table .= '<div class="cell starter_cell active" data-name="' . $left . '"><div class="get-it-checkbox"><input type="checkbox" class="check" CHECKED data-name="' . $left . '"><label></label></div><div class="plus-minus-wrapper">' . matrix_add_plus_minus('amount_' . $left, $left) . '</div><div class="product-name"><label>' . matrix_get_termname($left) . '</label></div></div>';
    $i = 0;
    foreach ($tops as $top) {
      $i++;
      $pid = matrix_find_product($left, $top);
      $product = '';
      if (!is_null($pid)) {
        $product = node_load($pid);
      }
      $weight = 0;

      if (!empty($product)) {
        //$product = node_view($product, 'diszkont');
        //$product = drupal_render($product);
        $product_title = l($product->title, '/node/' . $product->nid, array('target' => '_blank'));
        $product_view = matrix_render_product_view($product->nid);
        if (count($product->field_suly) > 0) {
          $wtid = $product->field_suly[LANGUAGE_NONE][0]['tid'];
          $weight = explode(' ', taxonomy_term_load($wtid)->name);
          $weight = $weight[0];
        }
        $price = $product->field_akciosar[LANGUAGE_NONE][0]['value'];
        if (isset($sumPrice[$top])) {
          $sumPrice[$top] += $price;
        }
        else {
          $sumPrice[$top] = $price;
        }

        $productwrapper = entity_metadata_wrapper('node', $product);
        $pproduct = $productwrapper->field_termek->value();
        $pproductwrapper = entity_metadata_wrapper('node', $pproduct);
        $weight = $pproductwrapper->field_darabsuly->value();
        if (isset($sumWeight[$top])) {
          $sumWeight[$top] += $weight;
        }
        else {
          $sumWeight[$top] = $weight;
        }
      }
      else {
        $product_title = '-';
        $sumPrice[$top] += 0;
        $sumWeight[$top] += 0;
        $product_view = '<img width="180" src="' . drupal_get_path('module', 'matrix') . '/images/no_image.png' .'">';

      }
      $best = ($i == 1) ? 'best' : '';
      $table .= '<div class="cell ' . $best. ' ' . $top . '" data-cell="' . $left .'_' . $top . '" data-category="' . $left . '" data-shop="' . $top . '" data-pid="' . $pid . '" data-weight="' . $weight . '" data-price="' . $price . '">' . $product_view . '</div>';
    }
    $table .= '</div>';
    matrix_add_tr($table);

  }
  $table .= '</div>';

  $table .= '<div class="summary-row">';
  $table .= '<div class="cell" id="corner">' . t('Summary') . '</div>';
  $firstclass = 'best';
  foreach ($tops as $top) {
    $table .= '<div class="sum-cell sum-price ' . $top . ' ' . $firstclass . '" data-shop="' . $top . '">' . number_format($sumPrice[$top], 0, '', ' ') . ' Ft</div>';
    $firstclass = '';
  }
  matrix_add_tr($table);

  /*$table .= '<div class="cell" id="corner">' . t('Summary') . '</div>';
  foreach ($tops as $top) {
    $table .= '<div class="sum-cell sum-weight ' . $top . '" data-shop="' . $top . '">' . $sumWeight[$top] . ' Kg</div>';
  }
  matrix_add_tr($table);
  $table .= '</div>';*/

  $table .= '<div class="cell" id="corner">&nbsp</div>';
  $firstclass = 'first';
  foreach ($tops as $top) {
    $table .= '<div class="button-cell ' . $top . ' ' . $firstclass . '" data-shop="' . $top . '">' . matrix_add_bottom_button($top) . '</div>';
    $firstclass = '';
  }
  matrix_add_tr($table);

  $vars = array(
    'message' => t('You already have a cart(<span class="modalShopName"></span>) on your list. What do you want to do?'),
    'keep' => t('Keep available one (<span class="modalShopName"></span>)'),
    'change' => t('Change it to last selected (<span class="modalNewShopName"></span>)'),
    'keepboth' => t('Keep both'),
    'message2' => t('You already have a cart from here(<span class="modalShopName"></span>). Do you really want to increase tha amounts?'),
    'cancel' => t('No, I fucked up. Forget it!'),
    'add' => t('Yes, add these amounts to the existing cart'),
    'table' => $header . $table,
  );


  return theme('matrix_compare_page', $vars);
}

function matrix_cookie_to_items() {
  $cookie = $_COOKIE['diszkont'];
  $items = explode(',', $cookie);
  $line_items = array();
  foreach ($items as $item) {
    $parts = explode('|', $item);
    if (!empty($parts[1]) && $parts[1] !== 'undefined') {
      $product = node_load($parts[1]);
      $shop = $product->field_aruhaz[LANGUAGE_NONE][0]['tid'];
      $offer = (empty($product->field_ajanlott_a_heten_[LANGUAGE_NONE][0]['value'])) ? 0 : $product->field_ajanlott_a_heten_[LANGUAGE_NONE][0]['value'];
      $amount = $parts[0];
      $line_item = array(
        'title' => $product->title,
        'amount' => $amount,
      );
      $line_items[$shop][$offer][$product->nid]['title'] = $product->title;
      if (isset($line_items[$shop][$offer][$product->nid]['amount'])) {
        $line_items[$shop][$offer][$product->nid]['amount'] += $amount;
        if ($line_items[$shop][$offer][$product->nid]['amount'] > 99) {
          $line_items[$shop][$offer][$product->nid]['amount'] = 99;
        }
      }
      else {
        $line_items[$shop][$offer][$product->nid]['amount'] = $amount;
      }
    }
  }

  return $line_items;
}

function matrix_cart_page($block = FALSE) {
  drupal_add_library('system', 'jquery.cookie');
  drupal_add_js(drupal_get_path('module', 'matrix') . '/js/remodal/remodal.js');
  drupal_add_js(drupal_get_path('module', 'matrix') . '/js/matrix_compare_page.js');
  drupal_add_css(drupal_get_path('module', 'matrix') . '/css/matrix_compare_page.css');
  drupal_add_css(drupal_get_path('module', 'matrix') . '/js/remodal/remodal.css');
  drupal_add_css(drupal_get_path('module', 'matrix') . '/js/remodal/remodal-default-theme.css');
  if (isset($_POST['block']) && $_POST['block'] == 1) {
    $block = TRUE;
  }

  $line_items = matrix_cookie_to_items();
  $output = '';
  $output .= '<input type="button" id="save-order" value="Letöltöm PDF-ben">';
  $output .= '<input type="button" id="email-order" value="Elküldöm e-mailben">';
  $output .= '<input type="button" id="print-order" value="Kinyomtatom">';
  $output .= '<input type="button" id="delete-order" value="X">';
  $output .= '<div id="discount-cart">';
  $output .= matrix_render_cart($line_items, 'matrix_cart', $block);


  if ($block) {
    $output .= '<input type="button" value="' . t('Jump to the cart') . '" onClick="self.location=\'/matrix_cart\';">';
  }
  $output .= '</div>';

  if (isset($_POST['block']) && $_POST['block'] == 1) {
    print $output;
  }
  else {
    return $output;
  }
}

function matrix_cart_page_ajax() {
  print matrix_cart_page(TRUE);
}

function matrix_render_cart($line_items, $format = '', $block) {
  $output = '';
  $template = $format;
  if ($block) {
    $template = 'matrix_cart_block';
  }
  foreach ($line_items as $sid => $line_item) {
    $shop = taxonomy_term_load($sid);


    $output .=  '<div class="shop-block ' . $template . ' shop-block-' . $sid . '">';
    $output .= '<div class="shop-header shop-header-' . $sid . '" data-shop="' . $sid . '">';
    if ($template !== 'matrix_cart_print') {
      $output .= '<h2>' . $shop->name . '</h2>';
    }
    else {
      $shopwrapper = entity_metadata_wrapper('taxonomy_term', $shop);
      $img_exist = $shopwrapper->field_logo->value();
      if ($img_exist) {
        $img_uri = $shopwrapper->field_logo->file->value()->uri;
        $img_url = file_create_url($img_uri);
        watchdog('matrix', 'IMG' . $img_url);
        $output .= '<img src="' . $img_url . '">' . '###product-count###';
      }
      else {
        $output .= $shop->name . '###product-count###';
      }
    }
    $output .= '</div>';


    if ($template !== 'matrix_cart_print') {
      $output .= '<div class="delete-shop" data-shop="' . $sid . '">X</div>';
    }
    $output .=  '<div style="clear:both;>"></div>';
    $sumOfPrice = 0;
    $sumOfWeight = 0;
    $product_count = 0;

    foreach ($line_item as $type) {

      foreach ($type as $pid => $offered) {
        $product_count++;

        $product = node_load($pid);
        $product = entity_metadata_wrapper('node', $product);
        $pproduct = node_load($product->field_termek->value()->nid);
        $pproduct = entity_metadata_wrapper('node', $pproduct);

        $weight = $pproduct->field_darabsuly->value() * 100;
        $weight = (int)$weight / 100;
        $weight_selector = $product->field_weight_piece_selector->value();
        if (is_null($weight_selector) || $weight_selector == FALSE) {
          $price = $product->field_akciosar->value();
        }
        else {
          $price = $product->field_akciosar->value() * $weight;
        }
        $amount_selector = $product->field_weight_piece_selector->value();
        $percent = $product->field_szazalek->value();

        $img_exist = $pproduct->field_termekfoto->value();
        if ($img_exist) {
          $img_uri = $pproduct->field_termekfoto->file->value()->uri;
          $img = theme('image_style', array('path' => $img_uri, 'style_name' => 'bevasarlokosar'));
        }
        else {
          $img = '<img src="/' . drupal_get_path('module', 'matrix') . '/images/no_image.png">';
        }
        ($percent < 100 && $percent!== 0) ?  $percent = $percent . '%' : $percent = '';
        $vars = array(
          'amount' => $offered['amount'],
          'product' => ($template !== 'matrix_cart_print') ? l($offered['title'], 'node/' . $pid) : $offered['title'],
          'product_short' => (strlen($offered['title']) > 20) ? l(mb_substr($offered['title'], 0, 20) . '...', 'node/' . $pid) : l($offered['title'], 'node/' . $pid),
          'piece' => $offered['amount'],
          'weight' => $offered['amount'] * $weight,
          'price' => number_format($offered['amount'] * $price, 0, '', ' '),
          'pid' => $pid,
          'shop' => $sid,
          'origweight' => $weight,
          'origprice' => $price,
          'image' => $img,
          'percent' => $percent,
          'selector' => ($amount_selector==null || $amount_selector == FALSE) ? FALSE : TRUE,
          'message' => t('Are you sure you want to empty the cart?'),
          'yes' => t('Yes'),
          'no' => t('No'),
        );
        $sumOfPrice += $offered['amount'] * $price;
        $sumOfWeight += $offered['amount'] * $weight;
        //$output = str_replace();
        $output .= theme($template, $vars);
      }
      $output = str_replace('###product-count###', ' (' . $product_count . ' ' . t('product') . ')', $output);
    }

    if ($template !== 'matrix_cart_print') {
      $output .= matrix_get_shop_url($sid);
      $output .= '<input type="button" class="nearest-shop" value="Még több innen: ' . $shop->name . '" onClick="window.open(\'/osszes-akcio?field_aruhaz_tid_selective[0]=' . $shop->tid . '\')">';
      $output .= '<div class="totals-row"><label class="totals">' . t('Total: ') . '</label><span class="cart-sum-weight" data-shop="' . $sid . '">' . $sumOfWeight . '</span><span class="measurement"> kg</span><span class="cart-sum-price" data-shop="' . $sid . '">' . number_format($sumOfPrice, 0, '', ' ') . ' </span><span class="measurement">Ft</span></div>';
    }
    else {
      $output .= '<table style="width: 100%; margin-bottom: 30px;"><tr><td class="totals" style="width: 60%;">' . t('Total: ') . '</td><td class="cart-sum-weight" style="width: 15%; text-align: right;" data-shop="' . $sid . '">' . $sumOfWeight . '</td><td class="measurement" style="width: 5%"> kg</td><td class="cart-sum-price" style="width: 15%; text-align: right;" data-shop="' . $sid . '">' . number_format($sumOfPrice, 0, '', ' ') . ' </td><td class="measurement" style="width: 5%">Ft</td></tr></table>';
    }

    $output .= '</div>';


  }




  return $output;
}

function matrix_save_order() {
  global $user;
  $line_items = matrix_cookie_to_items();
  $output = matrix_render_cart($line_items, 'matrix_cart_print');
  $node = entity_create('node', array('type' => 'order'));
  $entity = entity_metadata_wrapper('node',$node);

  $entity->author = $user->uid;
  $entity->title->set('Order');
  $entity->body->set(array('value' => $output, 'format' => 'full_html'));

  $entity->save();
  $nid = $entity->nid->value();
  print $nid;
}

function matrix_page_alter(&$page) {
  drupal_add_library('system', 'jquery.cookie');
  drupal_add_css(drupal_get_path('module', 'matrix') . '/css/matrix_mail.css');
  if (!isset($_COOKIE['Drupal_visitor_diszkont_uid'])) {
    user_cookie_save(array('diszkont_uid' => uniqid()));
  }
  /*drupal_add_css(drupal_get_path('module', 'matrix') . '/css/matrix_mail.css');
  $a2 = arg(2);
  $a1 = arg(1);
  if (arg(0) == 'osszes-akcio'
    or (arg(0) == 'node' && isset($a1) && !isset($a2))
    or (arg(0) == 'taxonomy' && arg(1) == 'term' && isset($a2))
    or (arg(0) == 'search' && arg(1) == 'products')) {
    drupal_add_js(drupal_get_path('module', 'matrix') . '/js/matrix_compare_page.js');
    drupal_add_js(drupal_get_path('module', 'matrix') . '/js/add_list_item.js');
  }*/

}



/**
 * Implements hook_form_alter().
 */
function matrix_form_alter(&$form, &$form_state, $form_id) {


  if ($form_id == 'print_mail_form') {
    drupal_set_title('Jókosár.hu');

    $form['txt_message']['#default_value'] = t('Sent from diszkontkereso.hu');
    $form['txt_to']['addrs']['#title'] = t('Your e-mail');
    //$form['txt_to']['addrs']['#default_value'] = 'vorosborisz@gmail.com';

    $form['fld_from_addr']['#default_value'] = 'info@diszkonkereso.hu';
    $form['fld_from_addr']['#value'] = 'info@diszkonkereso.hu';
    $form['fld_from_name']['#value'] = 'info@diszkonkereso.hu';
    $form['fld_subject']['#value'] = 'You can view your order on this link';

    $form['#submit'][] = 'matrix_printmail_custom_submit';



  }
}

function matrix_printmail_custom_submit($form, &$form_state) {
  $form_state['rebuild'] = TRUE;
  $form_state['redirect'] = '/matrix-cart';
}

function matrix_get_shop_from_product() {
  $list = $_POST['order'];
  $parts = explode(',', $list);
  $shops = array();
  foreach ($parts as $part) {
    $elements = explode('|', $part);
    if ($elements[1] == 'undefined') {
      continue;
    }
    $product = node_load($elements[1]);
    $product = entity_metadata_wrapper('node', $product);
    $shop = $product->field_aruhaz->value()->tid;
    if (!in_array($shop, $shops)) {
      $shops[] = $shop;
    }
  }
  if (count($shops) == 1) {
    $term = taxonomy_term_load($shops[0]);
    print $term->name;
  }
  else {
    print 'no-check';
  }


}

function matrix_inlist_counter_widget($pid = null) {
  drupal_add_js(drupal_get_path('module', 'matrix') . '/js/matrix_compare_page.js');
  drupal_add_js(drupal_get_path('module', 'matrix') . '/js/add_list_item.js');
  drupal_add_css(drupal_get_path('module', 'matrix') . '/css/matrix_compare_page.css');


  $pid = (is_null($pid)) ? $_POST['productId'] : $pid;
  if (isset($_GET['pid'])) {
    $pid = $_GET['pid'];
  }
  $product = node_load($pid);
  $product = entity_metadata_wrapper('node', $product);
  $pproduct = node_load($product->field_termek->value()->nid);
  $pproduct = entity_metadata_wrapper('node', $pproduct);

  $weight = $pproduct->field_darabsuly->value() * 100;
  $weight = (int)$weight / 100;
  $price = $product->field_akciosar->value();
  $amount_selector = $product->field_weight_piece_selector->value();
  $vars = array(
    'pid' => $pid,
    'origweight' => $weight,
    'origPrice' => $price,
    'selector' => ($amount_selector==null || $amount_selector == FALSE) ? FALSE : TRUE,
    'shop' => 'shopid',
  );

  print theme('matrix_plus_minus', $vars);
}



/**
 * Implements hook_views_api().
 *
 * Enabling using templates inside module
 */
/*function matrix_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'matrix'),
    'template path' => drupal_get_path('module', 'matrix') . '/templates',
  );
}


function matrix_preprocess_views_view(&$vars) {
  $cart_list_items = explode(',', $_COOKIE['diszkont']);
  $rows = $vars['rows'];
  foreach ($cart_list_items as $item) {
    $parts = explode('|', $item);
    $selected_products[] = $parts[1];
  }

    if (in_array($vars['row']->nid, $selected_products)) {
      $vars['classes_array'][] = 'product-on-list';

    }

}*/